// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id              String        @id @default(uuid())
  username        String        @unique
  email           String        @unique
  password        String
  sentMessages    messages[]    @relation("sent")
  receivedMessage messages[]    @relation("received")
  refreshToken    refreshToken?
  friends         friend[]      @relation("userFriends")
  friendOf        friend[]      @relation("friendOfUser")
}

model friend {
  id       String @id @default(cuid())
  userId   String
  friendId String
  user     user   @relation("userFriends", fields: [userId], references: [id])
  friend   user   @relation("friendOfUser", fields: [friendId], references: [id])
}

model messages {
  id      Int    @id @default(autoincrement())
  toId    String
  to      user   @relation("sent", fields: [toId], references: [id], onDelete: Cascade)
  fromId  String
  from    user   @relation("received", fields: [fromId], references: [id])
  message String
}

model refreshToken {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String   @unique
  user      user     @relation(references: [id], fields: [userId])
  expiresAt DateTime
  issuedAt  DateTime @default(now())
}
